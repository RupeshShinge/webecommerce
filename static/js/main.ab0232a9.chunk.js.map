{"version":3,"sources":["store/ui-slice.js","components/Header/Header.js","components/skeleton/Skeleton.js","components/skeleton/SkeletonProduct.js","store/cart-slice.js","components/Product/Products.js","store/index.js","App.js","reportWebVitals.js","index.js"],"names":["uiSlice","createSlice","name","initialState","cartIsVisible","notification","reducers","toggle","state","showNotification","action","status","payload","title","message","actions","Header","useDispatch","cartQuantity","useSelector","cart","totalQuantity","Navbar","bg","variant","fixed","Brand","href","Toggle","Collapse","className","Badge","Skeleton","type","SkeletonProduct","cartSlice","items","changed","replaceCart","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","removeItemFromCart","filter","cartActions","Products","useState","products","setProducts","loader","setLoader","useEffect","setTimeout","a","fetch","res","json","data","dispatch","addToCartHandler","image","Container","Row","map","loading","product","src","alt","slice","onClick","store","configureStore","reducer","ui","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAEMA,EAAUC,YAAY,CAC1BC,KAAM,KACNC,aAAc,CAAEC,eAAe,EAAOC,aAAc,MACpDC,SAAU,CACRC,OADQ,SACDC,GACLA,EAAMJ,eAAiBI,EAAMJ,eAE/BK,iBAJQ,SAISD,EAAOE,GACtBF,EAAMH,aAAe,CACnBM,OAAQD,EAAOE,QAAQD,OACvBE,MAAOH,EAAOE,QAAQC,MACtBC,QAASJ,EAAOE,QAAQE,aAQjBd,GAFUA,EAAQe,QAElBf,G,+BCOAgB,EArBA,WAEIC,cAAjB,IACMC,EAAeC,aAAY,SAACX,GAAD,OAAWA,EAAMY,KAAKC,iBAMrD,OACE,eAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,MAAM,MAAvC,UACE,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,QAAnB,4BACA,cAACL,EAAA,EAAOM,OAAR,IACA,eAACN,EAAA,EAAOO,SAAR,CAAiBC,UAAU,sBAA3B,UACE,cAAC,IAAD,CAAgBA,UAAU,SAC1B,cAACC,EAAA,EAAD,CAAOP,QAAQ,QAAf,SAAwBN,W,iCCXnBc,G,MARE,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACf,OACE,qBAAKH,UAAU,WAAf,SACE,qBAAKA,UAAWG,QCYTC,EAfS,WACpB,OACE,sBAAKJ,UAAU,mBAAf,UACE,cAAC,EAAD,CAAUG,KAAK,cACf,cAAC,EAAD,CAAUA,KAAK,SACf,cAAC,EAAD,CAAUA,KAAK,UACf,cAAC,EAAD,CAAUA,KAAK,SACf,cAAC,EAAD,CAAUA,KAAK,SACf,qBAAKH,UAAU,kBAAf,SACE,qBAAKA,UAAU,kB,gBCVnBK,EAAYlC,YAAY,CAC5BC,KAAM,OACNC,aAAc,CACZiC,MAAO,GACPf,cAAe,EACfgB,SAAS,GAEX/B,SAAU,CACRgC,YADQ,SACI9B,EAAOE,GACjBF,EAAMa,cAAgBX,EAAOE,QAAQS,cACrCb,EAAM4B,MAAQ1B,EAAOE,QAAQwB,OAE/BG,cALQ,SAKM/B,EAAOE,GACnB,IAAM8B,EAAU9B,EAAOE,QACjB6B,EAAejC,EAAM4B,MAAMM,MAAK,SAACC,GAAD,OAAUA,EAAKC,KAAOJ,EAAQI,MACpEpC,EAAMa,gBACNb,EAAM6B,SAAU,EACXI,GASHA,EAAaI,WACbJ,EAAaK,WAAaL,EAAaK,WAAaN,EAAQO,OAT5DvC,EAAM4B,MAAMY,KAAK,CACfJ,GAAIJ,EAAQI,GACZG,MAAOP,EAAQO,MACfF,SAAU,EACVC,WAAYN,EAAQO,MACpB7C,KAAMsC,EAAQ3B,SAOpBoC,mBAvBQ,SAuBWzC,EAAOE,GACxB,IAAMkC,EAAKlC,EAAOE,QACZ6B,EAAejC,EAAM4B,MAAMM,MAAK,SAACC,GAAD,OAAUA,EAAKC,KAAOA,KAC5DpC,EAAMa,gBACNb,EAAM6B,SAAU,EACc,IAA1BI,EAAaI,SACfrC,EAAM4B,MAAQ5B,EAAM4B,MAAMc,QAAO,SAACP,GAAD,OAAUA,EAAKC,KAAOA,MAEvDH,EAAaI,WACbJ,EAAaK,WAAaL,EAAaK,WAAaL,EAAaM,WAM5DI,EAAchB,EAAUpB,QAEtBoB,ICsBAiB,EAhEE,WACf,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACRD,GAAU,GACVE,WAAU,sBAAC,8BAAAC,EAAA,sEACSC,MAAM,qCADf,cACHC,EADG,gBAEUA,EAAIC,OAFd,OAEHC,EAFG,OAGTP,GAAU,GACVF,EAAYS,GAJH,2CAKR,OACF,IAEH,IAAMC,EAAWhD,cAGXiD,EAAmB,WACvBD,EACEd,EAAYZ,cAAc,CACxBK,GAAGU,EAASV,GACZ/B,MAAMyC,EAASzC,MACfkC,MAAMO,EAASP,MACfoB,MAAMb,EAASa,UAKrB,OACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKvC,UAAU,QAAf,SAII0B,EAoBE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGc,KAAI,SAACC,GAAD,OAC9B,qBAAKzC,UAAU,WAAf,SACE,cAAC,EAAD,SArBJwB,EAASgB,KAAI,SAACE,GAAD,OACX,sBAAK1C,UAAU,WAAf,UACE,qBACEA,UAAU,mBACV2C,IAAKD,EAAQL,MACbO,IAAI,SAEN,qBAAK5C,UAAU,qBAAf,SACG0C,EAAQ3D,MAAM8D,MAAM,EAAG,MAE1B,sBAAK7C,UAAU,qBAAf,cAAsC0C,EAAQzB,SAC9C,wBACEjB,UAAU,oBACV8C,QAASV,EAFX,uBAV6BM,EAAQ5B,YClCtCiC,EAJDC,YAAe,CAC3BC,QAAS,CAAEC,GAAIhF,EAAQ+E,QAAS3D,KAAMe,EAAU4C,WCUnCE,EATH,WACV,OACE,eAAC,IAAD,CAAUJ,MAAOA,EAAjB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCCSK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ab0232a9.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst uiSlice = createSlice({\r\n  name: \"ui\",\r\n  initialState: { cartIsVisible: false, notification: null },\r\n  reducers: {\r\n    toggle(state) {\r\n      state.cartIsVisible = !state.cartIsVisible;\r\n    },\r\n    showNotification(state, action) {\r\n      state.notification = {\r\n        status: action.payload.status,\r\n        title: action.payload.title,\r\n        message: action.payload.message,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const uiActions = uiSlice.actions;\r\n\r\nexport default uiSlice;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiActions } from \"../../store/ui-slice\";\r\nimport {Navbar, Badge} from \"react-bootstrap\";\r\nimport { FaShoppingCart } from \"react-icons/fa\";\r\n\r\n\r\nconst Header = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const cartQuantity = useSelector((state) => state.cart.totalQuantity);\r\n\r\n  const toggleCartHandler = () => {\r\n    dispatch(uiActions.toggle());\r\n  };\r\n\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\r\n        <Navbar.Brand href=\"#home\">Catalyst Media</Navbar.Brand>\r\n        <Navbar.Toggle />\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <FaShoppingCart className=\"cart\" />\r\n          <Badge variant=\"light\">{cartQuantity}</Badge>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport './Skeleton.css'\r\n\r\nconst Skeleton = ({type}) => {\r\n    return (\r\n      <div className=\"skeleton\">\r\n        <div className={type}></div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Skeleton\r\n","import React from 'react'\r\nimport Skeleton from './Skeleton.js';\r\n\r\nconst SkeletonProduct = () => {\r\n    return (\r\n      <div className=\"skeleton-wrapper\">\r\n        <Skeleton type=\"thumbnail\" />\r\n        <Skeleton type=\"text\" />\r\n        <Skeleton type=\"price\" />\r\n        <Skeleton type=\"cate\" />\r\n        <Skeleton type=\"btnn\" />\r\n        <div className=\"shimmer-wrapper\">\r\n          <div className=\"shimmer\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default SkeletonProduct\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    changed: false,\r\n  },\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n    },\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      state.changed = true;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItemFromCart(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n      state.changed = true;\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SkeletonProduct from \"../skeleton/SkeletonProduct\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport {useDispatch} from \"react-redux\"\r\n\r\nimport { cartActions } from \"../../store/cart-slice\";\r\n\r\nconst Products = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoader(true);\r\n    setTimeout(async () => {\r\n      const res = await fetch(\"https://fakestoreapi.com/products\");\r\n      const data = await res.json();\r\n      setLoader(false);\r\n      setProducts(data);\r\n    }, 4000);\r\n  }, []);\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const addToCartHandler = () => {\r\n    dispatch(\r\n      cartActions.addItemToCart({\r\n        id:products.id,\r\n        title:products.title,\r\n        price:products.price,\r\n        image:products.image\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"mt-50\">\r\n        {/* <Col className=\"col-4\">1 of 3</Col>\r\n          <Col className=\"col-4\">1 of 3</Col>\r\n          <Col className=\"col-4\">1 of 3</Col> */}\r\n        {!loader\r\n          ? products.map((product) => (\r\n              <div className=\"col-md-4\" key={product.id}>\r\n                <img\r\n                  className=\"product-img mb-3\"\r\n                  src={product.image}\r\n                  alt=\"shop\"\r\n                />\r\n                <div className=\"product-title mb-3\">\r\n                  {product.title.slice(0, 35)}\r\n                </div>\r\n                <div className=\"product-price mb-2\">${product.price}</div>\r\n                <button\r\n                  className=\"btn btn-dark mb-3\"\r\n                  onClick={addToCartHandler}\r\n                >\r\n                  Buy Now\r\n                </button>\r\n              </div>\r\n            ))\r\n          : [1, 2, 3, 4, 5, 6, 7, 8, 9].map((loading) => (\r\n              <div className=\"col-md-4\">\r\n                <SkeletonProduct />\r\n              </div>\r\n            ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport uiSlice from \"./ui-slice\";\r\nimport cartSlice from \"./cart-slice\";\r\n\r\nconst store = configureStore({\r\n  reducer: { ui: uiSlice.reducer, cart: cartSlice.reducer },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Products from \"./components/Product/Products\";\nimport store from \"./store/index\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Header />\n      <Products />\n    </Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}